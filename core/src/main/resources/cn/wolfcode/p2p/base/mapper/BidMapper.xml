<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.base.mapper.BidMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.base.domain.Bid" >
    <id column="id" property="id" />
    <result column="actualRate" property="actualRate" />
    <result column="availableAmount" property="availableAmount" />
    <result column="bidRequestId" property="bidRequestId" />
    <result column="bidTime" property="bidTime" />
    <result column="bidRequestTitle" property="bidRequestTitle" />
    <result column="bidRequestState" property="bidRequestState" />
    <!--<result column="bidUserId" property="bidUserId" />-->

    <association property="bidUser" columnPrefix="bu_" resultMap="cn.wolfcode.p2p.base.mapper.LoginInfoMapper.BaseResultMap"/>
  </resultMap>

  <insert id="insert" parameterType="cn.wolfcode.p2p.base.domain.Bid" useGeneratedKeys="true" keyProperty="id" >
    insert into bid (actualRate, availableAmount, bidRequestId, bidUserId, bidTime, 
      bidRequestTitle, bidRequestState)
    values (#{actualRate}, #{availableAmount}, #{bidRequestId}, #{bidUser.id}, #{bidTime},
      #{bidRequestTitle}, #{bidRequestState})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.base.domain.Bid" >
    update bid
    set actualRate = #{actualRate},
      availableAmount = #{availableAmount},
      bidRequestId = #{bidRequestId},
      bidUserId = #{bidUser.id},
      bidTime = #{bidTime},
      bidRequestTitle = #{bidRequestTitle},
      bidRequestState = #{bidRequestState}
    where id = #{id}
  </update>
  <update id="batchUpdate">
    update bid set bidRequestState = #{state}
    where bidRequestId = #{bidRequestId}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select b.id, actualRate, availableAmount, bidRequestId, bidUserId, bidTime, bidRequestTitle,
    bidRequestState,
    bu.id bu_id,
    bu.username bu_username
    from bid b join logininfo bu on bu.id = b.bidUserId
    where b.id = #{id}
  </select>

  <select id="selectByBidRequestId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select b.id, actualRate, availableAmount, bidRequestId, bidUserId, bidTime, bidRequestTitle,
      bidRequestState,
      bu.id bu_id,
      bu.username bu_username
    from bid b join logininfo bu on bu.id = b.bidUserId
    where b.bidRequestId = #{id}
  </select>
    <select id="sumByBidRequestIdAndUserId" resultType="java.math.BigDecimal">
      select ifnull(sum(availableAmount),0) from bid
      where bidRequestId = #{bidRequestId} and bidUserId = #{userId}
    </select>

</mapper>