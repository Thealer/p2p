<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.p2p.business.mapper.PaymentScheduleDetailMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.p2p.business.domain.PaymentScheduleDetail" >
    <id column="id" property="id" />
    <result column="bidAmount" property="bidAmount" />
    <result column="bidId" property="bidId" />
    <result column="totalAmount" property="totalAmount" />
    <result column="principal" property="principal" />
    <result column="interest" property="interest" />
    <result column="monthIndex" property="monthIndex" />
    <result column="deadLine" property="deadLine" />
    <result column="bidRequestId" property="bidRequestId" />
    <result column="payDate" property="payDate" />
    <result column="returnType" property="returnType" />
    <result column="paymentScheduleId" property="paymentScheduleId" />
    <result column="toLoginInfoId" property="toLoginInfoId" />

    <!--<result column="fromLoginInfoId" property="fromLoginInfoId" />-->

    <association property="fromLoginInfo" columnPrefix="lo_" resultMap="cn.wolfcode.p2p.base.mapper.LoginInfoMapper.BaseResultMap"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from paymentscheduledetail
    where id = #{id}
  </delete>
  <insert id="insert" parameterType="cn.wolfcode.p2p.business.domain.PaymentScheduleDetail" useGeneratedKeys="true" keyProperty="id" >
    insert into paymentscheduledetail (bidAmount, bidId, totalAmount, principal, interest, monthIndex, 
      deadLine, bidRequestId, payDate, returnType, paymentScheduleId,
      fromLoginInfoId, toLoginInfoId)
    values (#{bidAmount}, #{bidId}, #{totalAmount}, #{principal}, #{interest}, #{monthIndex}, 
      #{deadLine}, #{bidRequestId}, #{payDate}, #{returnType}, #{paymentScheduleId},
      #{fromLoginInfo.id}, #{toLoginInfoId})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.p2p.business.domain.PaymentScheduleDetail" >
    update paymentscheduledetail
    set bidAmount = #{bidAmount},
      bidId = #{bidId},
      totalAmount = #{totalAmount},
      principal = #{principal},
      interest = #{interest},
      monthIndex = #{monthIndex},
      deadLine = #{deadLine},
      bidRequestId = #{bidRequestId},
      payDate = #{payDate},
      returnType = #{returnType},
      paymentScheduleId = #{paymentScheduleId},
      fromLoginInfoId = #{fromLoginInfo.id},
      toLoginInfoId = #{toLoginInfoId}
    where id = #{id}
  </update>
  <update id="batchUpdatePayDateByPsId">
    update paymentscheduledetail
    set payDate = #{now}
    where paymentScheduleId = #{psId}
  </update>
    <update id="batchUpdateTransferByBidId">
      update paymentscheduledetail
      set transfer = #{transferState}
      where bidId = #{bidId}

    </update>
  <update id="batchUpdateToLoginInfoIdByBidId">
    update paymentscheduledetail
    set toLoginInfoId = #{userId}
    where bidId = #{bidId} and payDate is null
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select ps.id, bidAmount, bidId, totalAmount, principal, interest, monthIndex, deadline,
    bidRequestId, payDate, returnType, paymentScheduleId, fromLoginInfoId, toLoginInfoId,
      lo.id lo_id,
      lo.username lo_username
    from paymentscheduledetail ps join logininfo lo on lo.id = ps.fromLoginInfoId
    where ps.id = #{id}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, bidAmount, bidId, totalAmount, principal, interest, monthIndex, deadline, 
    bidRequestId, payDate, returnType, paymentScheduleId, fromLoginInfoId, toLoginInfoId
    from paymentscheduledetail
  </select>

  <select id="selectByPsId" resultMap="BaseResultMap">
    select ps.id, bidAmount, bidId, totalAmount, principal, interest, monthIndex, deadline,
      bidRequestId, payDate, returnType, paymentScheduleId, fromLoginInfoId, toLoginInfoId,
      lo.id lo_id,
      lo.username lo_username
    from paymentscheduledetail ps join logininfo lo on lo.id = ps.fromLoginInfoId
    where paymentScheduleId = #{id}
  </select>
</mapper>